# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'gui.ui'
#
# Created by: PyQt5 UI code generator 5.15.1
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets
import iterator, modes, rsa, elgamal, shamaq, dh

class Ui_Dialog(QtWidgets.QMainWindow):
    def setupUi(self, Dialog):
        self.inputpath = None
        self.outputpath = None

        Dialog.setObjectName("Dialog")
        Dialog.resize(600, 450)
        self.horizontalLayout = QtWidgets.QHBoxLayout(Dialog)
        self.horizontalLayout.setObjectName("horizontalLayout")

        self.tabWidget = QtWidgets.QTabWidget(Dialog)
        self.tabWidget.setObjectName("tabWidget")

        self.RSA = QtWidgets.QWidget()
        self.RSA.setObjectName("RSA")

        self.RSA_tab = QtWidgets.QTabWidget(self.RSA)
        self.RSA_tab.setGeometry(QtCore.QRect(0, 0, 581, 411))
        self.RSA_tab.setObjectName("RSA_tab")

#------------------------ RSA DECRYPT -----------------------------

        self.rsadecrypt = QtWidgets.QWidget()
        self.rsadecrypt.setObjectName("rsadecrypt")

        self.fileInputT = QtWidgets.QTextEdit(self.rsadecrypt)
        self.fileInputT.setGeometry(QtCore.QRect(80, 10, 411, 21))
        self.fileInputT.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileInputT.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileInputT.setObjectName("fileInputT")

        self.fileInputBtn = QtWidgets.QPushButton(self.rsadecrypt)
        self.fileInputBtn.setGeometry(QtCore.QRect(500, 10, 71, 23))
        self.fileInputBtn.setObjectName("fileInputBtn")
        self.fileInputBtn.clicked.connect(lambda: self.getFiles(self.fileInputT))

        self.fileInputL = QtWidgets.QLabel(self.rsadecrypt)
        self.fileInputL.setGeometry(QtCore.QRect(10, 10, 71, 20))
        self.fileInputL.setObjectName("fileInputL")

        self.priKeyL = QtWidgets.QLabel(self.rsadecrypt)
        self.priKeyL.setGeometry(QtCore.QRect(10, 40, 61, 16))
        self.priKeyL.setObjectName("priKeyL")

        self.priKeyT = QtWidgets.QTextEdit(self.rsadecrypt)
        self.priKeyT.setGeometry(QtCore.QRect(80, 40, 411, 21))
        self.priKeyT.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.priKeyT.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.priKeyT.setObjectName("priKeyT")

        self.priKeyBtn = QtWidgets.QPushButton(self.rsadecrypt)
        self.priKeyBtn.setGeometry(QtCore.QRect(500, 40, 71, 23))
        self.priKeyBtn.setObjectName("priKeyBtn")
        self.priKeyBtn.clicked.connect(lambda: self.getPriKeyFile(self.priKeyT, self.priKeyL))

        self.decRSA = QtWidgets.QPushButton(self.rsadecrypt)
        self.decRSA.setGeometry(QtCore.QRect(180, 210, 75, 23))
        self.decRSA.setObjectName("decRSA")
        self.decRSA.clicked.connect(lambda: self.decrypt("ECB", self.fileInputT, self.inputT, self.outputT, False))

        self.inputT = QtWidgets.QTextEdit(self.rsadecrypt)
        self.inputT.setGeometry(QtCore.QRect(10, 70, 480, 125))
        self.inputT.setObjectName("inputT")

        self.outputT = QtWidgets.QTextEdit(self.rsadecrypt)
        self.outputT.setGeometry(QtCore.QRect(10, 250, 480, 125))
        self.outputT.setObjectName("outputT")

        self.decsRSA = QtWidgets.QPushButton(self.rsadecrypt)
        self.decsRSA.setGeometry(QtCore.QRect(300, 210, 121, 23))
        self.decsRSA.setObjectName("decsRSA")
        self.decsRSA.clicked.connect(lambda: self.decrypt("ECB", self.fileInputT, self.inputT, self.outputT, True))

        self.RSA_tab.addTab(self.rsadecrypt, "")

# ------------------------ RSA ENCRYPT -----------------------------

        self.rsaencrypt = QtWidgets.QWidget()
        self.rsaencrypt.setObjectName("rsaencrypt")

        self.fileInputT_ersa = QtWidgets.QTextEdit(self.rsaencrypt)
        self.fileInputT_ersa.setGeometry(QtCore.QRect(90, 10, 371, 21))
        self.fileInputT_ersa.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileInputT_ersa.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileInputT_ersa.setObjectName("fileInputT_ersa")

        self.fileInputL_ersa = QtWidgets.QLabel(self.rsaencrypt)
        self.fileInputL_ersa.setGeometry(QtCore.QRect(10, 10, 71, 20))
        self.fileInputL_ersa.setObjectName("fileInputL_ersa")

        self.encsRSA = QtWidgets.QPushButton(self.rsaencrypt)
        self.encsRSA.setGeometry(QtCore.QRect(300, 240, 121, 23))
        self.encsRSA.setObjectName("encsRSA")
        self.encsRSA.clicked.connect(lambda: self.encrypt("ECB", self.fileInputT_ersa, self.inputT_ersa, self.outputT_ersa, True))

        self.fileInputBtn_ersa = QtWidgets.QPushButton(self.rsaencrypt)
        self.fileInputBtn_ersa.setGeometry(QtCore.QRect(470, 10, 101, 23))
        self.fileInputBtn_ersa.setObjectName("fileInputBtn_ersa")
        self.fileInputBtn_ersa.clicked.connect(lambda: self.getFiles(self.fileInputT_ersa))

        self.encRSA = QtWidgets.QPushButton(self.rsaencrypt)
        self.encRSA.setGeometry(QtCore.QRect(180, 240, 75, 23))
        self.encRSA.setObjectName("encRSA")
        self.encRSA.clicked.connect(
            lambda: self.encrypt("ECB", self.fileInputT_ersa, self.inputT_ersa, self.outputT_ersa, False))

        self.inputT_ersa = QtWidgets.QTextEdit(self.rsaencrypt)
        self.inputT_ersa.setGeometry(QtCore.QRect(10, 130, 450, 100))
        self.inputT_ersa.setObjectName("inputT_ersa")

        self.outputT_ersa = QtWidgets.QTextEdit(self.rsaencrypt)
        self.outputT_ersa.setGeometry(QtCore.QRect(10, 270, 450, 100))
        self.outputT_ersa.setObjectName("outputT_ersa")

        self.genKeyERSA = QtWidgets.QPushButton(self.rsaencrypt)
        self.genKeyERSA.setGeometry(QtCore.QRect(10, 70, 81, 51))
        self.genKeyERSA.setObjectName("genKeyERSA")
        self.genKeyERSA.clicked.connect(lambda: self.initiateRSA(self.priKey_ersa, self.pubKey_ersa))

        self.pubKey_ersa = QtWidgets.QLabel(self.rsaencrypt)
        self.pubKey_ersa.setGeometry(QtCore.QRect(100, 71, 361, 20))
        self.pubKey_ersa.setObjectName("pubKey_ersa")

        self.priKey_ersa = QtWidgets.QLabel(self.rsaencrypt)
        self.priKey_ersa.setGeometry(QtCore.QRect(100, 100, 361, 21))
        self.priKey_ersa.setObjectName("priKey_ersa")

        self.pubKeySv = QtWidgets.QPushButton(self.rsaencrypt)
        self.pubKeySv.setGeometry(QtCore.QRect(470, 70, 101, 23))
        self.pubKeySv.setObjectName("pubKeySv")
        self.pubKeySv.clicked.connect(lambda: self.saveFiles(self.pubKeyL_ersa.text()))

        self.priKeySv = QtWidgets.QPushButton(self.rsaencrypt)
        self.priKeySv.setGeometry(QtCore.QRect(470, 100, 101, 23))
        self.priKeySv.setObjectName("priKeySv")
        self.priKeySv.clicked.connect(lambda: self.saveFiles(self.priKeyL.text()))

        self.browsePubKey = QtWidgets.QPushButton(self.rsaencrypt)
        self.browsePubKey.setGeometry(QtCore.QRect(470, 40, 101, 23))
        self.browsePubKey.setObjectName("browsePubKey")
        self.browsePubKey.clicked.connect(lambda: self.getPubKeyFile(self.pubKeyT_ersa, self.pubKeyL_ersa))

        self.pubKeyT_ersa = QtWidgets.QTextEdit(self.rsaencrypt)
        self.pubKeyT_ersa.setGeometry(QtCore.QRect(90, 40, 371, 21))
        self.pubKeyT_ersa.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pubKeyT_ersa.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pubKeyT_ersa.setObjectName("pubKeyT_ersa")

        self.pubKeyL_ersa = QtWidgets.QLabel(self.rsaencrypt)
        self.pubKeyL_ersa.setGeometry(QtCore.QRect(10, 40, 71, 20))
        self.pubKeyL_ersa.setObjectName("pubKeyL_ersa")

        self.RSA_tab.addTab(self.rsaencrypt, "")
        self.tabWidget.addTab(self.RSA, "")

# ------------------------ ELGAMAL DECRYPT -----------------------------

        self.ElGamal = QtWidgets.QWidget()
        self.ElGamal.setContextMenuPolicy(QtCore.Qt.NoContextMenu)
        self.ElGamal.setObjectName("ElGamal")

        self.tabWidget_2 = QtWidgets.QTabWidget(self.ElGamal)
        self.tabWidget_2.setGeometry(QtCore.QRect(0, 0, 581, 411))
        self.tabWidget_2.setObjectName("tabWidget_2")

        self.egdecrypt = QtWidgets.QWidget()
        self.egdecrypt.setObjectName("egdecrypt")

        self.outputT_elgd = QtWidgets.QTextEdit(self.egdecrypt)
        self.outputT_elgd.setGeometry(QtCore.QRect(10, 250, 480, 125))
        self.outputT_elgd.setObjectName("outputT_elgd")

        self.priKeyL_elgd = QtWidgets.QLabel(self.egdecrypt)
        self.priKeyL_elgd.setGeometry(QtCore.QRect(10, 40, 61, 16))
        self.priKeyL_elgd.setObjectName("priKeyL_elgd")

        self.priKeyT_elgd = QtWidgets.QTextEdit(self.egdecrypt)
        self.priKeyT_elgd.setGeometry(QtCore.QRect(80, 40, 411, 21))
        self.priKeyT_elgd.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.priKeyT_elgd.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.priKeyT_elgd.setObjectName("priKeyT_elgd")

        self.fileInputT_elgd = QtWidgets.QTextEdit(self.egdecrypt)
        self.fileInputT_elgd.setGeometry(QtCore.QRect(80, 10, 411, 21))
        self.fileInputT_elgd.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileInputT_elgd.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileInputT_elgd.setObjectName("fileInputT_elgd")

        self.fileInputL_elgd = QtWidgets.QLabel(self.egdecrypt)
        self.fileInputL_elgd.setGeometry(QtCore.QRect(10, 10, 71, 20))
        self.fileInputL_elgd.setObjectName("fileInputL_elgd")

        self.decsELG = QtWidgets.QPushButton(self.egdecrypt)
        self.decsELG.setGeometry(QtCore.QRect(300, 210, 121, 23))
        self.decsELG.setObjectName("decsELG")
        self.decELG.clicked.connect(
            lambda: self.decrypt("ECB", self.fileInputT_elgd, self.inputT_elgd, self.outputT_elgd, True))

        self.fileInputBtn_elgd = QtWidgets.QPushButton(self.egdecrypt)
        self.fileInputBtn_elgd.setGeometry(QtCore.QRect(500, 10, 71, 23))
        self.fileInputBtn_elgd.setObjectName("fileInputBtn_elgd")
        self.fileInputBtn_elgd.clicked.connect(lambda: self.getFiles(self.fileInputT_elgd))

        self.decELG = QtWidgets.QPushButton(self.egdecrypt)
        self.decELG.setGeometry(QtCore.QRect(180, 210, 75, 23))
        self.decELG.setObjectName("decELG")
        self.decELG.clicked.connect(
            lambda: self.decrypt("ECB", self.fileInputT_elgd, self.inputT_elgd, self.outputT_elgd, False))

        self.inputT_elgd = QtWidgets.QTextEdit(self.egdecrypt)
        self.inputT_elgd.setGeometry(QtCore.QRect(10, 70, 480, 125))
        self.inputT_elgd.setObjectName("inputT_elgd")

        self.priKeyBtn_elgd = QtWidgets.QPushButton(self.egdecrypt)
        self.priKeyBtn_elgd.setGeometry(QtCore.QRect(500, 40, 71, 23))
        self.priKeyBtn_elgd.setObjectName("priKeyBtn_elgd")
        self.priKeyBtn_elgd.clicked.connect(lambda: self.getPriKeyFile(self.priKeyT_elgd, self.priKeyL_elgd))

        self.tabWidget_2.addTab(self.egdecrypt, "")

# ------------------------ ELGAMAL ENCRYPT -----------------------------

        self.egencrypt = QtWidgets.QWidget()
        self.egencrypt.setObjectName("egencrypt")

        self.fileInputL_elge = QtWidgets.QLabel(self.egencrypt)
        self.fileInputL_elge.setGeometry(QtCore.QRect(10, 10, 71, 20))
        self.fileInputL_elge.setObjectName("fileInputL_elge")

        self.inputT_elge = QtWidgets.QTextEdit(self.egencrypt)
        self.inputT_elge.setGeometry(QtCore.QRect(10, 130, 480, 100))
        self.inputT_elge.setObjectName("inputT_elge")

        self.pubKey_elge = QtWidgets.QLabel(self.egencrypt)
        self.pubKey_elge.setGeometry(QtCore.QRect(100, 71, 361, 20))
        self.pubKey_elge.setObjectName("pubKey_elge")

        self.pubKeyL_elge = QtWidgets.QLabel(self.egencrypt)
        self.pubKeyL_elge.setGeometry(QtCore.QRect(10, 40, 71, 20))
        self.pubKeyL_elge.setObjectName("pubKeyL_elge")

        self.priKeySv_elge = QtWidgets.QPushButton(self.egencrypt)
        self.priKeySv_elge.setGeometry(QtCore.QRect(470, 100, 101, 23))
        self.priKeySv_elge.setObjectName("priKeySv_elge")

        self.pubKeyT_elge = QtWidgets.QTextEdit(self.egencrypt)
        self.pubKeyT_elge.setGeometry(QtCore.QRect(90, 40, 371, 21))
        self.pubKeyT_elge.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pubKeyT_elge.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.pubKeyT_elge.setObjectName("pubKeyT_elge")

        self.browsePubKey_elge = QtWidgets.QPushButton(self.egencrypt)
        self.browsePubKey_elge.setGeometry(QtCore.QRect(470, 40, 101, 23))
        self.browsePubKey_elge.setObjectName("browsePubKey_elge")
        self.browsePubKey_elge.clicked.connect(lambda: self.getPubKeyFile(self.pubKeyT_elge, self.pubKeyL_elge))

        self.encRSA_elge = QtWidgets.QPushButton(self.egencrypt)
        self.encRSA_elge.setGeometry(QtCore.QRect(180, 240, 75, 23))
        self.encRSA_elge.setObjectName("encRSA_elge")

        self.fileInputT_elge = QtWidgets.QTextEdit(self.egencrypt)
        self.fileInputT_elge.setGeometry(QtCore.QRect(90, 10, 371, 21))
        self.fileInputT_elge.setVerticalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileInputT_elge.setHorizontalScrollBarPolicy(QtCore.Qt.ScrollBarAlwaysOff)
        self.fileInputT_elge.setObjectName("fileInputT_elge")

        self.outputT_elge = QtWidgets.QTextEdit(self.egencrypt)
        self.outputT_elge.setGeometry(QtCore.QRect(10, 270, 480, 100))
        self.outputT_elge.setObjectName("outputT_elge")

        self.fileInputBtn_elge = QtWidgets.QPushButton(self.egencrypt)
        self.fileInputBtn_elge.setGeometry(QtCore.QRect(470, 10, 101, 23))
        self.fileInputBtn_elge.setObjectName("fileInputBtn_elge")
        self.fileInputBtn_elge.clicked.connect(lambda: self.getFiles(self.fileInputT_elge))

        self.encsRSA_elge = QtWidgets.QPushButton(self.egencrypt)
        self.encsRSA_elge.setGeometry(QtCore.QRect(300, 240, 121, 23))
        self.encsRSA_elge.setObjectName("encsRSA_elge")

        self.priKey_elge = QtWidgets.QLabel(self.egencrypt)
        self.priKey_elge.setGeometry(QtCore.QRect(100, 100, 361, 21))
        self.priKey_elge.setObjectName("priKey_elge")

        self.pubKeySv_elge = QtWidgets.QPushButton(self.egencrypt)
        self.pubKeySv_elge.setGeometry(QtCore.QRect(470, 70, 101, 23))
        self.pubKeySv_elge.setObjectName("pubKeySv_elge")

        self.genKeyELGE = QtWidgets.QPushButton(self.egencrypt)
        self.genKeyELGE.setGeometry(QtCore.QRect(10, 70, 81, 51))
        self.genKeyELGE.setObjectName("genKeyELGE")

        self.tabWidget_2.addTab(self.egencrypt, "")
        self.tabWidget.addTab(self.ElGamal, "")

# ------------------------ DEFFIE-HELLMAN -----------------------------

        self.DeffieHellman = QtWidgets.QWidget()
        self.DeffieHellman.setObjectName("DeffieHellman")

        self.ndf = QtWidgets.QLabel(self.DeffieHellman)
        self.ndf.setGeometry(QtCore.QRect(100, 10, 471, 21))
        self.ndf.setObjectName("ndf")

        self.gdf = QtWidgets.QLabel(self.DeffieHellman)
        self.gdf.setGeometry(QtCore.QRect(100, 50, 471, 21))
        self.gdf.setObjectName("gdf")

        self.xdf = QtWidgets.QLabel(self.DeffieHellman)
        self.xdf.setGeometry(QtCore.QRect(100, 90, 461, 21))
        self.xdf.setObjectName("xdf")

        self.ydf = QtWidgets.QLabel(self.DeffieHellman)
        self.ydf.setGeometry(QtCore.QRect(100, 140, 461, 21))
        self.ydf.setObjectName("ydf")

        self.kdf = QtWidgets.QLabel(self.DeffieHellman)
        self.kdf.setGeometry(QtCore.QRect(10, 190, 561, 161))
        self.kdf.setObjectName("kdf")

        self.ndfbtn = QtWidgets.QPushButton(self.DeffieHellman)
        self.ndfbtn.setGeometry(QtCore.QRect(0, 10, 91, 23))
        self.ndfbtn.setObjectName("ndfbtn")
        self.ndfbtn.clicked.connect(lambda: self.genN(self.ndf))

        self.gdfbtn = QtWidgets.QPushButton(self.DeffieHellman)
        self.gdfbtn.setGeometry(QtCore.QRect(0, 50, 91, 23))
        self.gdfbtn.setObjectName("gdfbtn")
        self.gdfbtn.clicked.connect(lambda: self.genG(self.gdf))

        self.xdfbtn = QtWidgets.QPushButton(self.DeffieHellman)
        self.xdfbtn.setGeometry(QtCore.QRect(0, 90, 91, 23))
        self.xdfbtn.setObjectName("xdfbtn")
        self.xdfbtn.clicked.connect(lambda: self.genX(self.xdf))

        self.ydfbtn = QtWidgets.QPushButton(self.DeffieHellman)
        self.ydfbtn.setGeometry(QtCore.QRect(0, 140, 91, 23))
        self.ydfbtn.setObjectName("ydfbtn")
        self.ydfbtn.clicked.connect(lambda: self.genY(self.ydf))

        self.savedf = QtWidgets.QPushButton(self.DeffieHellman)
        self.savedf.setGeometry(QtCore.QRect(310, 370, 81, 31))
        self.savedf.setObjectName("savedf")
        self.savedf.clicked.connect(lambda: self.saveFiles(
            self.ndf.text() + '\n' +
            self.gdf.text() + '\n' +
            self.xdf.text() + '\n' +
            self.ydf.text() + '\n' +
            self.kdf.text() + '\n'
        ))

        self.genkdf = QtWidgets.QPushButton(self.DeffieHellman)
        self.genkdf.setGeometry(QtCore.QRect(180, 370, 81, 31))
        self.genkdf.setObjectName("genkdf")
        self.genkdf.clicked.connect(lambda: self.genK(self.kdf))

        self.tabWidget.addTab(self.DeffieHellman, "")
        self.horizontalLayout.addWidget(self.tabWidget)

        self.retranslateUi(Dialog)
        self.tabWidget.setCurrentIndex(2)
        self.RSA_tab.setCurrentIndex(1)
        self.tabWidget_2.setCurrentIndex(1)
        QtCore.QMetaObject.connectSlotsByName(Dialog)

    def retranslateUi(self, Dialog):
        _translate = QtCore.QCoreApplication.translate
        Dialog.setWindowTitle(_translate("Dialog", "Dialog"))
        self.tabWidget.setToolTip(_translate("Dialog", "<html><head/><body><p><br/></p></body></html>"))
        self.fileInputBtn.setText(_translate("Dialog", "Browse..."))
        self.fileInputL.setText(_translate("Dialog", "File Input :"))
        self.priKeyL.setText(_translate("Dialog", "Private Key :"))
        self.priKeyBtn.setText(_translate("Dialog", "Browse..."))
        self.decRSA.setText(_translate("Dialog", "Decrypt"))
        self.decsRSA.setText(_translate("Dialog", "Decrypt and Save..."))
        self.RSA_tab.setTabText(self.RSA_tab.indexOf(self.rsadecrypt), _translate("Dialog", "Decrypt"))
        self.fileInputL_ersa.setText(_translate("Dialog", "File Input :"))
        self.encsRSA.setText(_translate("Dialog", "Encrypt and Save..."))
        self.fileInputBtn_ersa.setText(_translate("Dialog", "Browse..."))
        self.encRSA.setText(_translate("Dialog", "Encrypt"))
        self.genKeyERSA.setText(_translate("Dialog", "Generate Key"))
        self.pubKey_ersa.setText(_translate("Dialog", "Public Key :"))
        self.priKey_ersa.setText(_translate("Dialog", "Private Key :"))
        self.pubKeySv.setText(_translate("Dialog", "Save Public Key"))
        self.priKeySv.setText(_translate("Dialog", "Save Private Key"))
        self.browsePubKey.setText(_translate("Dialog", "Browse..."))
        self.pubKeyL_ersa.setText(_translate("Dialog", "Public Key File :"))
        self.RSA_tab.setTabText(self.RSA_tab.indexOf(self.rsaencrypt), _translate("Dialog", "Encrypt"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.RSA), _translate("Dialog", "RSA"))
        self.priKeyL_elgd.setText(_translate("Dialog", "Private Key :"))
        self.fileInputL_elgd.setText(_translate("Dialog", "File Input :"))
        self.decsELG.setText(_translate("Dialog", "Decrypt and Save..."))
        self.fileInputBtn_elgd.setText(_translate("Dialog", "Browse..."))
        self.decELG.setText(_translate("Dialog", "Decrypt"))
        self.priKeyBtn_elgd.setText(_translate("Dialog", "Browse..."))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.egdecrypt), _translate("Dialog", "Decrypt"))
        self.fileInputL_elge.setText(_translate("Dialog", "File Input :"))
        self.pubKey_elge.setText(_translate("Dialog", "Public Key :"))
        self.pubKeyL_elge.setText(_translate("Dialog", "Public Key File :"))
        self.priKeySv_elge.setText(_translate("Dialog", "Save Private Key"))
        self.browsePubKey_elge.setText(_translate("Dialog", "Browse..."))
        self.encRSA_elge.setText(_translate("Dialog", "Encrypt"))
        self.fileInputBtn_elge.setText(_translate("Dialog", "Browse..."))
        self.encsRSA_elge.setText(_translate("Dialog", "Encrypt and Save..."))
        self.priKey_elge.setText(_translate("Dialog", "Private Key :"))
        self.pubKeySv_elge.setText(_translate("Dialog", "Save Public Key"))
        self.genKeyELGE.setText(_translate("Dialog", "Generate Key"))
        self.tabWidget_2.setTabText(self.tabWidget_2.indexOf(self.egencrypt), _translate("Dialog", "Encrypt"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.ElGamal), _translate("Dialog", "ElGamal"))
        self.ndf.setText(_translate("Dialog", "N : "))
        self.gdf.setText(_translate("Dialog", "G : "))
        self.xdf.setText(_translate("Dialog", "X : "))
        self.ydf.setText(_translate("Dialog", "Y : "))
        self.kdf.setText(_translate("Dialog", "Symmetric Key : "))
        self.ndfbtn.setText(_translate("Dialog", "Generate N"))
        self.gdfbtn.setText(_translate("Dialog", "Generate G"))
        self.xdfbtn.setText(_translate("Dialog", "Generate X"))
        self.ydfbtn.setText(_translate("Dialog", "Generate Y"))
        self.savedf.setText(_translate("Dialog", "Save Key"))
        self.genkdf.setText(_translate("Dialog", "Generate Key"))
        self.tabWidget.setTabText(self.tabWidget.indexOf(self.DeffieHellman), _translate("Dialog", "Deffie-Hellman"))

    def getFiles(self, textbox):
        fileurl, _ = QtWidgets.QFileDialog.getOpenFileName(self, 'Single File', 'C:/', '*')
        textbox.setText(fileurl)

    def saveFiles(self, text):
        fileurl, _ = QtWidgets.QFileDialog.getSaveFileName(self, 'Single File', 'C:/', '*')
        print(fileurl, fileurl == '', text)
        if(fileurl != ''):
            with open(fileurl, "w+") as file :
                file.write(text)

    def getPubKeyFile(self, textbox, label):
        fileurl, _ = QtWidgets.QFileDialog.getOpenFileName(self, 'Single File', 'C:/', '*.pub')
        textbox.setText(fileurl)
        res = ''

        if(fileurl != ''):
            with open(fileurl, "r") as file :
                for data in file :
                    res += data

        label.setText(res)

    def getPriKeyFile(self, textbox, label):
        fileurl, _ = QtWidgets.QFileDialog.getOpenFileName(self, 'Single File', 'C:/', '*.pri')
        textbox.setText(fileurl)

        res = ''
        if(fileurl != ''):
            with open(fileurl, "r") as file:
                for data in file:
                    res += data

        label.setText(res)

    def initiateRSA(self, labelpri, labelpub):
        self.cipher = rsa.RSA()
        self.cipher.generate_key()
        print(self.cipher.get_public_key)
        print(self.cipher.get_private_key)
        self.private_key_base64 = self.cipher.get_private_key_base64()
        self.public_key_base64 = self.cipher.get_public_key_base64()

        labelpri.setText(self.cipher.get_private_key())
        labelpub.setText(self.cipher.get_public_key())

    def initiateELG(self, labelpri, labelpub):
        self.cipher = elgamal.Elgamal()
        self.cipher.generate_key()
        self.private_key_base64 = self.cipher.get_private_key_base64()
        self.public_key_base64 = self.cipher.get_public_key_base64()
        labelpri.setText(self.private_key_base64)
        labelpub.setText(self.public_key_base64)

    def initiateDH(self):
        self.deffie_hellman = dh.DiffieHellman()

    def encrypt(self, type, inputpath, inputbox, outputbox, save):
        mode = None
        if (type == "ECB"):
            mode = modes.ECB(self.cipher)
        elif (type == "CBC"):
            mode = None
        else:
            mode = None

        if ((inputpath.text() != None) and (inputpath.text() != '')):
            file_iterator = iterator.file_block_iterator(inputpath.text(), mode.block_size_plaintext)

            if(save):
                self.saveFiles(mode.encrypt(file_iterator))
            else:
                encrypted = ""
                for data in mode.encrypt(file_iterator):
                    encrypted += data.decode("latin-1")

                outputbox.setText(encrypted)
        else:
            message = inputbox.text()
            input_iterator = iterator.bytes_block_iterator(message.encode("latin-1"),
                                                           mode.block_size_plaintext)
            if (save):
                self.saveFiles(mode.encrypt(input_iterator))
            else:
                encrypted = ""
                for data in mode.encrypt(input_iterator):
                    encrypted += data.decode("latin-1")

                outputbox.setText(encrypted)


    def decrypt(self, type, inputpath, inputbox, outputbox, save):
        mode = None
        if (type == "ECB"):
            mode = modes.ECB(self.cipher)
        elif (type == "CBC"):
            mode = None
        else:
            mode = None

        if ((inputpath.text() != None) and (inputpath.text() != '')):
            file_iterator = iterator.file_block_iterator(inputpath.text(), mode.block_size_plaintext)

            if (save):
                self.saveFiles(mode.decrypt(file_iterator))
            else:
                decrypted = ""
                for data in mode.decrypt(file_iterator):
                    decrypted += data.decode("latin-1")

                outputbox.setText(decrypted)
        else:
            message = inputbox.text()
            input_iterator = iterator.bytes_block_iterator(message.encode("latin-1"),
                                                           mode.block_size_plaintext)
            if (save):
                self.saveFiles(mode.decrypt(input_iterator))
            else:
                decrypted = ""
                for data in mode.decrypt(input_iterator):
                    decrypted += data.decode("latin-1")

                outputbox.setText(decrypted)

    def genN(self, label):
        new_DH = dh.DiffieHellman()
        self.n = new_DH.get_n()
        label.setText('n : ' + str(self.n))

    def genG(self, label):
        new_DH = dh.DiffieHellman()
        self.g = new_DH.get_g(self.n)
        label.setText('g : ' + str(self.g))

    def genX(self, label):
        new_DH = dh.DiffieHellman()
        self.x = new_DH.get_x(self.n)
        label.setText('x : ' + str(self.x))

    def genY(self, label):
        new_DH = dh.DiffieHellman()
        self.y = new_DH.get_Y(self.n, self.g, self.x)
        label.setText('y : ' + str(self.y))

    def genK(self, label):
        new_DH = dh.DiffieHellman()
        self.k = new_DH.get_symetric_key(self.g, self.x, self.y, self.n)
        label.setText('Symetric Key : ' + str(self.k))

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    Dialog = QtWidgets.QDialog()
    ui = Ui_Dialog()
    ui.setupUi(Dialog)
    Dialog.show()
    sys.exit(app.exec_())
